渗透测试过程
1.信息收集：信息收集是渗透测试过程中最频繁和最重要的阶段，我们将一次又一次地回到这个阶段。（说人话：最核心最基础要全面细心排查）
  1.公开来源情报：OSINT是一种寻找目标公司或个人的公开信息的过程，可以识别事件（即，公共和私人会议）、外部和内部依赖性以及连接。OSINT使用来自免费来源的公开（开源）信息来获得预期结果。我们经常可以从公司及其员工那里找到与安全相关的敏感信息。通常，分享这些信息的人并不知道他们不是唯一可以访问这些信息的人。
  （说人话：公开途径找公司找个人信息泄露）
  2.基础设施枚举：概述公司在互联网和内联网上的位置。为此，我们使用OSINT和第一次活动扫描。我们使用DNS等服务来创建客户端服务器和主机的映射，并了解其infrastructure的结构。这包括名称服务器、邮件服务器、Web服务器、云实例等。我们制作了一个准确的主机及其IP地址列表，并将它们与我们的范围进行比较，以查看它们是否被包括和列出。
    在这个阶段，我们还试图确定公司的安全措施。这些信息越精确，就越容易掩饰我们的攻击（Evasive Testing）。但是，识别防火墙（如Web应用程序防火墙）也使我们能够很好地了解哪些技术可能会触发客户警报，以及可以使用哪些方法来避免警报。在这里，我们所处的“位置”也无关紧要，无论我们是试图从外部获得基础设施的概述（external）还是从网络内部检查基础设施（internal）。从网络内部进行的枚举为我们提供了一个很好的概述，我们可以将其用作Password Spraying攻击的目标，在这种攻击中，我们使用一个密码来尝试使用尽可能多的不同用户名进行身份验证，希望一次成功的身份验证尝试可以让我们在网络中立足。所有这些用于此目的的方法和技术将在各个模块中详细介绍。
  3.服务枚举：我们识别允许我们通过网络（或本地，从内部角度）与主机或服务器交互的服务。因此，了解服务，version是什么，information它为我们提供了什么，以及reason它可以使用，这是至关重要的。一旦我们了解了这项服务的背景，就可以得出一些合乎逻辑的结论，为我们提供几种选择。许多服务都有版本历史记录，可以让我们识别主机或服务器上安装的版本是否实际上是最新的。这也将帮助我们找到大多数情况下旧版本中仍然存在的安全漏洞。许多管理员害怕更改正常工作的应用程序，因为这可能会损害整个基础架构。因此，管理员通常更愿意接受留下一个或多个漏洞并维护功能的风险，而不是关闭安全漏洞。
  4.主机枚举：我们可以找到许多不同的服务，例如公司用于在员工之间交换数据的FTP服务器，甚至允许匿名访问。即使在今天，仍有许多主机和服务器制造商不再支持。然而，这些旧版本的操作系统和服务仍然存在漏洞，这些漏洞仍然存在并危及我们客户的整个基础设施。在这里，我们是从外部还是从内部检查每台主机或服务器并不重要。然而，从内部的角度来看，我们会发现从外部往往无法访问的服务。因此，许多管理员变得粗心，并经常认为这些服务是“安全的”，因为它们不能直接从互联网访问。因此，由于这些假设或不严格的实践，经常会发现许多错误配置。在主机枚举期间，我们尝试确定此主机或服务器扮演什么角色以及它与哪些网络组件通信。此外，我们还必须确定它使用哪个services用于此目的，以及它们位于哪个ports。在内部主机枚举过程中，在大多数情况下，在成功Exploitation一个或多个漏洞之后，我们也会从内部检查主机或服务器。这意味着我们要查找敏感的files、本地services、scripts、applications、information以及其他可能存储在主机上的内容。这也是Post-Exploitation阶段的一个重要部分，在这个阶段，我们尝试利用和提升特权。
2.漏洞评估：我们检查和分析在信息收集阶段收集的信息。脆弱性评估阶段是一个基于调查结果的分析过程。如果我们通过信息收集确定了服务或应用程序的版本，并发现了常见漏洞和暴露（CVE），则很可能仍然存在此漏洞。我们可以使用许多不同的来源找到每个组件的漏洞披露一旦我们发现了这样的已发布漏洞，我们就可以对其进行诊断，以确定是什么导致了或已经导致了该漏洞。在这里，我们必须尽可能地了解Proof-Of-Concept（POC）代码或应用程序或服务本身的功能，因为管理员的许多手动配置都需要对POC进行一些自定义。每个POC都是针对特定情况量身定制的，在大多数情况下，我们也需要适应我们的情况。
（说人话：信息收集到服务版本号在漏洞库查询版本漏洞手动用poc进行漏洞验证）
（假设我们无法从分析中检测或识别潜在的漏洞？重新信息收集和漏洞评估）损坏概率
3.Exploitation:在Exploitation阶段，我们寻找方法，使这些弱点适应我们的用例.一旦我们在Vulnerability Assessment阶段发现了一两个可以应用到目标网络/系统的漏洞，我们就可以对这些攻击进行优先级排序:1.成功概率2.复杂性3.损坏概率
  首先，我们需要评估probability of successfully对目标执行的特定攻击。CVSS评分可以帮助我们在这里，使用NVD计算器更好地计算特定的攻击和他们的成功概率。
  我们找不到高质量的，已知的工作漏洞利用代码？那就漏洞复现：因此，可能需要在代表目标主机的虚拟机上本地重建漏洞利用，以精确地确定需要调整和更改的内容。一旦我们在本地设置了系统并安装了已知组件以尽可能接近地镜像目标环境（即，目标服务/应用程序的版本号相同），我们可以按照漏洞中描述的步骤开始准备漏洞。然后，我们在本地托管的VM上进行测试，以确保它可以正常工作，并且不会严重损坏。在其他情况下，我们会遇到我们经常看到的错误配置和漏洞，并确切地知道使用哪种工具或漏洞利用，以及漏洞利用或技术是否“安全”或可能导致不稳定。
  （说人话：找不到好的poc自己搭建环境测试）
4.后渗透：
5.横向移动：

术语理解
1.shell:用户控制操作系统的媒介 无ui
2.port:未上锁就未授权

工具使用
1.ssh
2.netcat
3.vim
4.termux 
5.markdown：https://markdown.com.cn/basic-syntax/

渗透
1.目录枚举：有时我们会发现隐藏的功能或页面/目录暴露了敏感数据，这些数据可以用来访问Web应用程序，甚至可以在Web服务器上执行远程代码。
2.公开利用：Nmap扫描中确定的端口上运行的服务1.查看是否有任何应用程序/服务具有任何公共漏洞。可以在Web应用程序和其他在开放端口（如SSH或ftp）上运行的应用程序中找到公共漏洞。
                                         2.谷歌的应用程序名称与exploit
                                         3.工具是searchsploit
                                         4.我们还可以利用在线漏洞利用数据库来搜索漏洞，如Exploit DB，Rapid7 DB或Vulnerability Lab。Web应用程序简介模块讨论了Web应用程序的公共漏洞。
3.msf：1.search exploit xx命令搜索我们的目标应用程序
       2.USE来使用它
       3.要查看可用于配置的选项，我们可以使用show options命令
       4.set命令设置它们
       5.运行脚本之前，我们可以运行一个检查，以确保服务器是脆弱的
       6.并非Metasploit Framework中的每个漏洞都支持check功能。最后，我们可以使用run或exploit命令来运行漏洞利用
4.利用一种攻击进入系统后拿shell：1.Reverse Shell反弹shell 2.Bind Shell 3.Web Shell

















